name: CI

on:
  pull_request:
    branches: [master]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  xtask-changes:
    runs-on: ubuntu-latest
    name: Detect xtask changes
    outputs:
      xtask-changes: ${{ steps.filter.outputs.xtask }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          xtask:
            - 'xtask/**'
  run-tests:
    name: Run tests
    runs-on: ubuntu-latest
    env:
      cache_id: tests
    steps:
      - uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/
            target/
            ~/.rustup/toolchains
            ~/.rustup/update-hashes
            ~/.rustup/settings.toml
          key: ${{ runner.os }}-cargo-test
      - name: Install latest rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
      - name: Install llvm-cov
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-llvm-cov
      - name: Run tests
        run: |
          OUT=$(cargo llvm-cov test --exclude gen --workspace -- --nocapture --test-threads 1 | grep TOTAL | xargs)
          TOTAL=$(echo $OUT | cut -d " " -f 8)
          MISSED=$(echo $OUT | cut -d " " -f 9)
          COV=$(echo $OUT | cut -d " " -f 10)
          echo "TOTAL=$TOTAL" >> $GITHUB_ENV
          echo "MISSED=$MISSED" >> $GITHUB_ENV
          echo "COV=$COV" >> $GITHUB_ENV
      - name: Publish report
        uses: mshick/add-pr-comment@v2
        if: ${{ github.actor != 'dependabot[bot]' }}
        with:
          message: |
            ## Coverage report

            Total lines: **${{ env.TOTAL }}**
            Missed lines: **${{ env.MISSED }}**
            Coverage: **${{ env.COV }}**


  analyze-dependencies:
    name: Analyze
    runs-on: ubuntu-latest
    env:
      cache_id: tests
    steps:
      - uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/
            target/
            ~/.rustup/toolchains
            ~/.rustup/update-hashes
            ~/.rustup/settings.toml
          key: ${{ runner.os }}-cargo-pre-test
      - name: Install latest rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
            components: rustfmt, clippy
      - name: Install cargo-sort
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-sort
      - name: Install cargo-machete 
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-machete
      - name: Check cargo dependencies order
        uses: actions-rs/cargo@v1
        with:
          command: sort
          args: -w -c
      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --workspace --all-features -- -D warnings
      - name: Detect unused dependencies
        uses: actions-rs/cargo@v1
        with:
          command: machete
      - name: Check format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check

  build-lambdas:
    name: Build lambdas
    runs-on: ubuntu-latest
    needs: xtask-changes
    if: ${{ needs.xtask-changes.outputs.xtask-changes == 'true' }}
    env:
      cache_id: tests
    steps:
      - uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/
            target/
            ~/.rustup/toolchains
            ~/.rustup/update-hashes
            ~/.rustup/settings.toml
          key: ${{ runner.os }}-cargo-build
      - name: Install latest rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
      - name: Install cross
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cross
      - name: Build lambdas
        uses: actions-rs/cargo@v1
        with:
          command: xtask
          args: build-lambda --use-cross --target aarch64-unknown-linux-gnu
